# Определение версии Docker Compose и начало описания сервисов
version: '3.9'

services:
#  frontend:
#    image: sermalenk/skypro-front:base
#    ports:
#      - "88:80"
#    depends_on:
#      - api

  api:
    # Сборка образа для сервиса django из текущей директории
    build: .
    # Задание имени контейнера для сервиса django
    container_name: api
    # Задание команды, которую нужно запустить при запуске контейнера для сервиса django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    # Открытие порта на хостовой машине и перенаправление на порт в контейнере
    ports:
      - "8000:8000"
    # Зависимость от другого сервиса
    depends_on:
      - pgdb

  migrations:
    build:
      context: .
#    env_file:
#      - .env.dev
    container_name: migrations
    environment:
      POSTGRES_HOST: pgdb
    depends_on:
      pgdb:
        condition: service_healthy
    command: python manage.py migrate

  pgdb:
    # Использование готового образа postgres
    image: postgres:15.0-alpine
    # Задание переменных окружения для контейнера с postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: skytodolist
      POSTGRES_USER: skypro
      POSTGRES_PASSWORD: skypassword
    restart: always
     # Задание имени контейнера для сервиса pgdb
    container_name: pgdb
     # Связывание тома с директорией в контейнере для сохранения данных postgres
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U skypro -d skytodolist"]
      interval: 5s
      timeout: 5s
      retries: 15

volumes:
  pgdbdata:
  database:
  frontend:
