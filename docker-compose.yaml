version: '3.9'

services:
  frontend:
    image: sermalenk/skypro-front:base
    ports:
      - "8080:80"
    depends_on:
      - api

  api:
    build: . # /code
    container_name: api

#    volumes:
#      - ./.docker_env:app/.env
#      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env.dev
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./.docker_env:app/.env
    command: python manage.py runserver 0.0.0.0:8000

  migrations:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.docker_env:app/.env
    command: python manage.py migrate

  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: skyuser
      POSTGRES_PASSWORD: skypassword
      POSTGRES_DB: skytodolist
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5


volumes:
  postgres_data:
  frontend: