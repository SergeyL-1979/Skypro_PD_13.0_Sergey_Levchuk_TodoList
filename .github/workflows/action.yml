name: Build and deploy action
on:
  push:
    branches: ["main"]

jobs:
  build_and_push:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          logout: true

      - name: Build and Push Container
        run: |-
          docker build -t sergdef/todolist_skypro:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
          docker push sergdef/todolist_skypro:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    env:
      POSTGRES_DB: ${{ secrets.SQL_DB_NAME }}
      POSTGRES_USER: ${{ secrets.SQL_DB_USER }}
      POSTGRES_PASSWORD: ${{ secrets.SQL_DB_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2

      - name: Render config
        run: |-
          mkdir deploy
          cat docker-compose-ci.yml | envsubst > deploy/docker-compose.yaml

      # ===== BEGIN SSH EXIT =========
      - name: Clone files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          # Эти значения надо вписать в секреты гитхаба
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          # Указываем, какие файлы копировать
          source: "deploy/docker-compose.yaml"
          target: "deploy"
          strip_components: 1

#      - name: Executing remote SSH commands using SSH_KEY
#        uses: appleboy/ssh-action@v0.1.8
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          script: |-
#            whoami
#            cd todolist
#            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d
        
